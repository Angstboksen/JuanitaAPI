// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/alias/{guildId}": {
            "post": {
                "tags": [
                    "Alias"
                ],
                "summary": "Create a new alias for a playlist URI",
                "operationId": "CreateAlias",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID of the guild",
                        "name": "guildId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Alias to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AliasPost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Alias"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/alias/{guildId}/{alias}": {
            "get": {
                "tags": [
                    "Alias"
                ],
                "summary": "Get an alias object by alias string if exists",
                "operationId": "GetByAlias",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID of the guild",
                        "name": "guildId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Alias to get",
                        "name": "alias",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Alias"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/aliases/{guildId}": {
            "get": {
                "tags": [
                    "Alias"
                ],
                "summary": "Get all aliases for a guild",
                "operationId": "GetAliases",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discord ID of the guild",
                        "name": "guildId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Alias"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/guild": {
            "post": {
                "tags": [
                    "Guild"
                ],
                "summary": "Create a new guild",
                "operationId": "CreateGuild",
                "parameters": [
                    {
                        "description": "Guild to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Guild"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Guild"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/guild/{guildId}": {
            "put": {
                "tags": [
                    "Guild"
                ],
                "summary": "Update a guild",
                "operationId": "UpdateGuild",
                "parameters": [
                    {
                        "description": "Guild to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Guild"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Guild"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/guild/{guildId}/language": {
            "patch": {
                "tags": [
                    "Guild"
                ],
                "summary": "Update a guild language",
                "operationId": "UpdateGuildLanguage",
                "parameters": [
                    {
                        "description": "Guild language to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GuildLanguagePatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GuildLanguagePatch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/guilds": {
            "get": {
                "tags": [
                    "Guild"
                ],
                "summary": "Get all guilds",
                "operationId": "GetGuilds",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit the amount of guilds returned",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Guild"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/requestor": {
            "post": {
                "tags": [
                    "Requestor"
                ],
                "summary": "Create a new requestor",
                "operationId": "CreateRequestor",
                "parameters": [
                    {
                        "description": "Requestor to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Requestor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Requestor"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/requestors": {
            "get": {
                "tags": [
                    "Requestor"
                ],
                "summary": "Get all requestors",
                "operationId": "GetRequestors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Requestor"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get all searches",
                "operationId": "GetSearches",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit of results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Search"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Create a new search",
                "operationId": "CreateSearch",
                "parameters": [
                    {
                        "description": "Search to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Search"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Search"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/search/guild/{guildId}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get all searches by guild",
                "operationId": "GetSearchesByGuild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guildId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Limit of results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Search"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/search/mostplayed": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get most played searches",
                "operationId": "GetMostPlayedSearches",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit of results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SongCount"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/search/mostplayed/guild/{guildId}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get most played searches by guild",
                "operationId": "GetMostPlayedSearchesByGuild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guildId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Limit of results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SongCount"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/search/mostplayed/requestor/{requestorId}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get most played searches by requestor",
                "operationId": "GetMostPlayedSearchesByRequestor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Requestor ID",
                        "name": "requestorId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Limit of results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SongCount"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/search/requestor/{requestorId}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get all searches by requestor",
                "operationId": "GetSearchesByRequestor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Requestor ID",
                        "name": "requestorId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Limit of results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Search"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/search/requestor/{requestorId}/guild/{guildId}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get all searches by requestor and guild",
                "operationId": "GetSearchesByRequestorAndGuild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Requestor ID",
                        "name": "requestorId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guild ID",
                        "name": "guildId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Limit of results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Search"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/stats/{requestorId}": {
            "get": {
                "tags": [
                    "Requestor"
                ],
                "summary": "Get requestor stats",
                "operationId": "GetRequestorStats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Requestor ID",
                        "name": "requestorId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RequestorStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Alias": {
            "type": "object",
            "required": [
                "alias",
                "name",
                "playlistid"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "playlistid": {
                    "type": "string"
                }
            }
        },
        "models.AliasPost": {
            "type": "object",
            "required": [
                "alias",
                "playlistid"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "playlistid": {
                    "type": "string"
                }
            }
        },
        "models.Guild": {
            "type": "object",
            "required": [
                "aliases",
                "id",
                "language",
                "name",
                "permissionrole"
            ],
            "properties": {
                "aliases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Alias"
                    }
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "$ref": "#/definitions/models.Language"
                },
                "name": {
                    "type": "string"
                },
                "permissionrole": {
                    "type": "string"
                }
            }
        },
        "models.GuildLanguagePatch": {
            "type": "object",
            "required": [
                "language"
            ],
            "properties": {
                "language": {
                    "$ref": "#/definitions/models.Language"
                }
            }
        },
        "models.Language": {
            "type": "string",
            "enum": [
                "unknown"
            ],
            "x-enum-varnames": [
                "Unknown"
            ]
        },
        "models.Requestor": {
            "type": "object",
            "required": [
                "tag"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "models.RequestorStats": {
            "type": "object",
            "required": [
                "distinct_song_count",
                "requestor",
                "search_count",
                "time_played",
                "top_search"
            ],
            "properties": {
                "distinct_song_count": {
                    "type": "integer"
                },
                "requestor": {
                    "$ref": "#/definitions/models.Requestor"
                },
                "search_count": {
                    "type": "integer"
                },
                "time_played": {
                    "type": "integer"
                },
                "top_search": {
                    "$ref": "#/definitions/models.SongCount"
                }
            }
        },
        "models.Search": {
            "type": "object"
        },
        "models.SongCount": {
            "type": "object",
            "required": [
                "duration",
                "play_count",
                "requestor",
                "title",
                "url"
            ],
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "play_count": {
                    "type": "integer"
                },
                "requestor": {
                    "$ref": "#/definitions/models.Requestor"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "JuanitaAPI",
	Description:      "Backend service for JuanitaMusic discord bot",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
